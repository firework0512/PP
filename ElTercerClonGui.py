#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Mon Jun  1 01:16:07 2020
#

import wx


# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class ClonFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ClonFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((450, 450))

        # Tool Bar
        self.toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.toolbar)
        self.toolbar.AddTool(1, "new_game", wx.Bitmap("/Users/hua/Documents/Images/new.png", wx.BITMAP_TYPE_ANY),
                             wx.NullBitmap, wx.ITEM_NORMAL, "", "Creates a new game")
        self.toolbar.AddTool(2, "open_file", wx.Bitmap("/Users/hua/Documents/Images/open.png", wx.BITMAP_TYPE_ANY),
                             wx.Bitmap("/Users/hua/Documents/Images/open_white.png", wx.BITMAP_TYPE_ANY),
                             wx.ITEM_NORMAL, "", "Opens a saved game")
        self.toolbar.AddTool(3, "save_game", wx.Bitmap("/Users/hua/Documents/Images/save.png", wx.BITMAP_TYPE_ANY),
                             wx.Bitmap("/Users/hua/Documents/Images/save_white.png", wx.BITMAP_TYPE_ANY),
                             wx.ITEM_NORMAL, "", "Saves the current game.")
        # Tool Bar end
        self.splitter_window = wx.SplitterWindow(self, wx.ID_ANY)
        self.left_panel = wx.Panel(self.splitter_window, wx.ID_ANY)
        self.mode_radio_box = wx.RadioBox(self.left_panel, wx.ID_ANY, "Modo",
                                          choices=[u"Alfabético", "Level", "1024", "2048"], majorDimension=1,
                                          style=wx.RA_SPECIFY_COLS)
        self.right_panel = wx.Panel(self.splitter_window, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.new_game, id=1)
        self.Bind(wx.EVT_TOOL, self.open_file, id=2)
        self.Bind(wx.EVT_TOOL, self.save_game, id=3)
        self.Bind(wx.EVT_RADIOBOX, self.game_mode_changed, self.mode_radio_box)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ClonFrame.__set_properties
        self.SetTitle("CLON3-GUI")
        self.SetBackgroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DDKSHADOW))
        self.toolbar.Realize()
        self.mode_radio_box.SetSelection(0)
        self.splitter_window.SetMinimumPaneSize(100)
        self.splitter_window.SetSashGravity(0.5)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ClonFrame.__do_layout
        main_sizer = wx.BoxSizer(wx.VERTICAL)
        right_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        grid_static_box_sizer = wx.StaticBoxSizer(wx.StaticBox(self.right_panel, wx.ID_ANY, "Tablero"), wx.HORIZONTAL)
        grid_sizer = wx.GridSizer(3, 3, 0, 0)
        vertical_box_sizer = wx.BoxSizer(wx.VERTICAL)
        game_status_sizer = wx.StaticBoxSizer(wx.StaticBox(self.left_panel, wx.ID_ANY, "Game Status"), wx.VERTICAL)
        record_sizer = wx.BoxSizer(wx.HORIZONTAL)
        movements_sizer = wx.BoxSizer(wx.HORIZONTAL)
        vertical_box_sizer.Add((20, 20), 0, 0, 0)
        vertical_box_sizer.Add(self.mode_radio_box, 0, 0, 0)
        vertical_box_sizer.Add((20, 20), 2, wx.EXPAND, 0)
        movements_text = wx.StaticText(self.left_panel, wx.ID_ANY, "Movimientos : ", style=wx.ALIGN_LEFT)
        movements_sizer.Add(movements_text, 0, wx.ALIGN_CENTER, 0)
        movements_count_text = wx.StaticText(self.left_panel, wx.ID_ANY, "33")
        movements_sizer.Add(movements_count_text, 0, wx.ALIGN_CENTER, 0)
        game_status_sizer.Add(movements_sizer, 1, wx.EXPAND, 0)
        record_hint_ext = wx.StaticText(self.left_panel, wx.ID_ANY, u"Puntuación :   ", style=wx.ALIGN_LEFT)
        record_sizer.Add(record_hint_ext, 0, wx.ALIGN_CENTER, 0)
        record_count_text = wx.StaticText(self.left_panel, wx.ID_ANY, "48", style=wx.ALIGN_RIGHT)
        record_sizer.Add(record_count_text, 0, wx.ALIGN_CENTER | wx.RIGHT, 0)
        game_status_sizer.Add(record_sizer, 1, wx.EXPAND, 0)
        vertical_box_sizer.Add(game_status_sizer, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)
        self.left_panel.SetSizer(vertical_box_sizer)
        right_vertical_sizer.Add((20, 20), 1, wx.EXPAND, 0)
        bitmap_1 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/Vacio.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_1, 0, wx.ALIGN_CENTER, 0)
        bitmap_2 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/Vacio.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_2, 0, wx.ALIGN_CENTER, 0)
        bitmap_3 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/0-5.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_3, 0, wx.ALIGN_CENTER, 0)
        bitmap_4 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/0-4.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_4, 0, wx.ALIGN_CENTER, 0)
        bitmap_12 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                    wx.Bitmap("/Users/hua/Documents/Images/Vacio.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_12, 0, wx.ALIGN_CENTER, 0)
        bitmap_13 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                    wx.Bitmap("/Users/hua/Documents/Images/Bloque.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_13, 0, wx.ALIGN_CENTER, 0)
        bitmap_6 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/Bloque.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_6, 0, wx.ALIGN_CENTER, 0)
        bitmap_8 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/0-8.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_8, 0, wx.ALIGN_CENTER, 0)
        bitmap_9 = wx.StaticBitmap(self.right_panel, wx.ID_ANY,
                                   wx.Bitmap("/Users/hua/Documents/Images/0-9.png", wx.BITMAP_TYPE_ANY))
        grid_sizer.Add(bitmap_9, 0, wx.ALIGN_CENTER, 0)
        grid_static_box_sizer.Add(grid_sizer, 0, wx.ALIGN_CENTER, 0)
        right_vertical_sizer.Add(grid_static_box_sizer, 0, 0, 0)
        right_vertical_sizer.Add((20, 20), 1, wx.EXPAND, 0)
        self.right_panel.SetSizer(right_vertical_sizer)
        self.splitter_window.SplitVertically(self.left_panel, self.right_panel, 180)
        main_sizer.Add(self.splitter_window, 1, wx.EXPAND, 0)
        self.SetSizer(main_sizer)
        self.Layout()
        self.Centre()
        # end wxGlade

    def new_game(self, event):  # wxGlade: ClonFrame.<event_handler>
        print("Event handler 'new_game' not implemented!")
        event.Skip()

    def open_file(self, event):  # wxGlade: ClonFrame.<event_handler>
        print("Event handler 'open_file' not implemented!")
        event.Skip()

    def save_game(self, event):  # wxGlade: ClonFrame.<event_handler>
        print("Event handler 'save_game' not implemented!")
        event.Skip()

    def game_mode_changed(self, event):  # wxGlade: ClonFrame.<event_handler>
        print("Event handler 'game_mode_changed' not implemented!")
        event.Skip()


# end of class ClonFrame

class MyApp(wx.App):
    def OnInit(self):
        self.clon_3 = ClonFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.clon_3)
        self.clon_3.Show()
        return True


# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
